#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n, m, k;
    cin >> n >> m >> k;
    vector<int> a(n), b(m);
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }
    for(int i = 0; i < m; i++) {
        cin >> b[i];
    }
    vector<vector<vector<int>>> dp(n + 1, vector<vector<int>>(m + 1, vector<int>(k + 1, 0)));
    for(int i = 1; i <= n; i++) {
        for(int j = 1; j <= m; j++) {
            for(int l = 0; l <= k; l++) {
                dp[i][j][l] = max(dp[i - 1][j][l], dp[i][j - 1][l]);
                if(a[i - 1] == b[j - 1]) {
                    dp[i][j][l] = max(dp[i][j][l], dp[i - 1][j - 1][l] + 1);
                }
                else if(l > 0) {
                    dp[i][j][l] = max(dp[i][j][l], dp[i - 1][j - 1][l - 1] + 1);
                }
            }
        }
    }
    cout << dp[n][m][k] << endl;
    return 0;
}
