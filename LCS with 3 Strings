#include <bits/stdc++.h>

using namespace std;

int lcs(string s1, string s2, string s3) {
    int len1 = s1.length(), len2 = s2.length(), len3 = s3.length();
    vector<vector<vector<int>>> dp(len1 + 1, vector<vector<int>>(len2 + 1, vector<int>(len3 + 1)));

    for (int i = 1; i <= len1; i++) {
        for (int j = 1; j <= len2; j++) {
            for (int k = 1; k <= len3; k++) {
                if (s1[i - 1] == s2[j - 1] && s2[j - 1] == s3[k - 1]) {
                    dp[i][j][k] = dp[i - 1][j - 1][k - 1] + 1;
                } else {
                    dp[i][j][k] = max({dp[i - 1][j][k], dp[i][j - 1][k], dp[i][j][k - 1]});
                }
            }
        }
    }
    return dp[len1][len2][len3];
}

int main() {
    string s1, s2, s3;
    cin >> s1 >> s2 >> s3;
    int ans = lcs(s1, s2, s3);
    cout << ans << endl;
    return 0;
}
